<?php

namespace Altum\Controllers;

use Altum\Database\Database;
use Altum\Date;
use Altum\Middlewares\Csrf;
use Altum\Middlewares\Authentication;

class AdminPackageCreate extends Controller {

    public function index() {

        Authentication::guard('admin');
		
		$list_trial_expired = array('1' => '3 days',
									'2' => '1 week',
									'3' => '2 weeks',
									'4' => '3 weeks',
									'5' => '1 month');

        if(!empty($_POST)) {
            /* Filter some the variables */
            $_POST['name'] = Database::clean_string($_POST['name']);
			$_POST['is_trial'] = abs((int)$_POST['is_trial'])>1 ? 0 : (int)$_POST['is_trial'];
			
			if($_POST['is_trial']==1) {
				
				$_POST['trial_expired'] = isset($list_trial_expired[$_POST['trial_expired']]) ? $list_trial_expired[$_POST['trial_expired']] : $list_trial_expired['1'];
				$_POST['is_default'] = abs((int)$_POST['is_default'])>1 ? 0 : (int)$_POST['is_default'];
				
			} else {
				
				$_POST['trial_expired'] = null;
				$_POST['is_default'] = 0;
				
			}
			
			if($this->user->agency == 'Y' || $this->user->subagency == 'Y' || $this->user->whitelabel == 'Y'){
				$_POST['monthly_price'] = 0;
				$_POST['annual_price'] = 0;
				$user_id = $this->user->user_id;
			}else{
				$_POST['monthly_price'] = (float) $_POST['monthly_price'];
				$_POST['annual_price'] = (float) $_POST['annual_price'];
				$user_id = 0;
			}

            $_POST['settings'] = json_encode([
                'no_ads'                => (bool) isset($_POST['no_ads']),
                'removable_branding'    => (bool) isset($_POST['removable_branding']),
                'custom_branding'       => (bool) isset($_POST['custom_branding']),
                'custom_colored_links'  => (bool) isset($_POST['custom_colored_links']),
                'statistics'            => (bool) isset($_POST['statistics']),
                'google_analytics'      => (bool) isset($_POST['google_analytics']),
                'facebook_pixel'        => (bool) isset($_POST['facebook_pixel']),
                'custom_backgrounds'    => (bool) isset($_POST['custom_backgrounds']),
                'verified'              => (bool) isset($_POST['verified']),
                'scheduling'            => (bool) isset($_POST['scheduling']),
                'seo'                   => (bool) isset($_POST['seo']),
                'utm'                   => (bool) isset($_POST['utm']),
                'socials'               => (bool) isset($_POST['socials']),
                'fonts'                 => (bool) isset($_POST['fonts']),
				'exclude_agency'        => (bool) isset($_POST['exclude_agency']),
                'projects_limit'        => (int) $_POST['projects_limit'],
                'biolinks_limit'        => (int) $_POST['biolinks_limit'],
                'links_limit'           => (int) $_POST['links_limit'],
                'domains_limit'         => (int) $_POST['domains_limit'],
            ]);
            $_POST['is_enabled'] = (int) $_POST['is_enabled'];

            if(!Csrf::check()) {
                $_SESSION['error'][] = $this->language->global->error_message->invalid_csrf_token;
            }
			
			//if($this->user->agency == 'Y' || $this->user->subagency == 'Y'){
			//	$packages_result = Database::$database->query("SELECT * FROM `packages` WHERE uid = '{$this->user->user_id}' ORDER BY `package_id` ASC");
			//	if($packages_result->num_rows>=3) {
			//		$_SESSION['error'][] = $this->language->global->error_message->packages_limit;
			//	}
			//}
			
            if(empty($_SESSION['error'])) {
                
				/* Update the database */
				if($_POST['is_trial']==1&&$_POST['is_default']==1) {
					$stmt = Database::$database->prepare("UPDATE `packages` SET `is_default` = 0 WHERE `uid` = {$this->user->user_id} AND `is_default` = 1");
					$stmt->execute();
					$stmt->close();
				}
				
				$stmt = Database::$database->prepare("INSERT INTO `packages` (`uid`, `name`, `monthly_price`, `annual_price`, `settings`, `is_enabled`, `is_trial`, `is_default`, `trial_expired`, `date`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                $stmt->bind_param('ssssssssss', $user_id, $_POST['name'], $_POST['monthly_price'], $_POST['annual_price'], $_POST['settings'], $_POST['is_enabled'], $_POST['is_trial'], $_POST['is_default'], $_POST['trial_expired'], Date::$date);
                $stmt->execute();
                $stmt->close();

                /* Set a nice success message */
                $_SESSION['success'][] = $this->language->global->success_message->basic;

                redirect('admin/packages');
            }
        }


        /* Main View */
        $data = [
        ];

        $view = new \Altum\Views\View('admin/package-create/index', (array) $this);

        $this->add_view_content('content', $view->run($data));

    }

}
